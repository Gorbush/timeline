version: '3'

services:

  db:
    image: mariadb
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_SUPER_USER_PW}
    ports:
      - 3306:3306
    volumes:
      # - ./init:/docker-entrypoint-initdb.d
      - ${DATABASE_DATA}:/var/lib/mysql

  adminer:
    image: adminer
    restart: always
    ports:
      - 9091:8080

  rabbitmq:
    #image: rabbitmq
    image: rabbitmq:management
    hostname: rabbitmq
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ${RABBITMQ_DATA}:/var/lib/rabbitmq

  webapp:
    image: hulk66/timeline_be:0.82
    # build: backend
    restart: always
    ports: 
      - 9092:5000
    volumes:
      - ${PHOTO_PATH}:/photos:ro
      - ${PREVIEW_PATH}:/preview
      - ${LOG_PATH}:/log
    environment:
      APP: "web"
      WAIT_HOSTS: db:3306, rabbitmq:5672 
      WAIT_HOSTS_TIMEOUT: 120
      WAIT_SLEEP_INTERVAL: 3    
      WAIT_AFTER_HOSTS: 2
      DB_SUPER_USER_PW: ${DB_SUPER_USER_PW}
      GUNICORN_WORKERS: ${GUNICORN_WORKERS}
      GUNICORN_WORKER_CLASS: ${GUNICORN_WORKER_CLASS}
      FACE_DISTANCE_VERY_SAFE: ${FACE_DISTANCE_VERY_SAFE}
      FACE_DISTANCE_SAFE: ${FACE_DISTANCE_SAFE}
      FACE_DISTANCE_MAYBE: ${FACE_DISTANCE_MAYBE}
    depends_on:
      - db
      - rabbitmq

  worker:
    image: hulk66/timeline_be:0.82
    # build: backend
    # restart: always
    environment:
      APP: "worker"
      WORKERS: ${WORKERS}
      WAIT_HOSTS: db:3306, rabbitmq:5672, webapp:5000 
      WAIT_HOSTS_TIMEOUT: 120
      WAIT_SLEEP_INTERVAL: 3     
      WAIT_AFTER_HOSTS: 2
      DB_SUPER_USER_PW: ${DB_SUPER_USER_PW}
      FACE_CLUSTER_EPSILON: ${FACE_CLUSTER_EPSILON}
      FACE_CLUSTER_MIN_SAMPLES: ${FACE_CLUSTER_MIN_SAMPLES}
      FACE_CLUSTER_MAX_FACES: ${FACE_CLUSTER_MAX_FACES}
      FACE_DISTANCE_VERY_SAFE: ${FACE_DISTANCE_VERY_SAFE}
      FACE_DISTANCE_SAFE: ${FACE_DISTANCE_SAFE}
      FACE_DISTANCE_MAYBE: ${FACE_DISTANCE_MAYBE}
      #INITIAL_SCAN: ${INITIAL_SCAN}
      #POLLING: ${POLLING}
    volumes:
      - ${PHOTO_PATH}:/photos:ro
      - ${PREVIEW_PATH}:/preview
      - ${LOG_PATH}:/log
    depends_on:
      - webapp
      - db
      - rabbitmq
     
  frontend:
    image: hulk66/timeline_fe:0.82
    # build: frontend
    restart: always
    ports:
      - 9090:80
    volumes:
      - ${PHOTO_PATH}:/photos:ro
      - ${PREVIEW_PATH}:/preview
    environment:
      BE_HOST: webapp
      BE_PORT: 5000
      WAIT_HOSTS: webapp:5000
      WAIT_HOSTS_TIMEOUT: 120
      WAIT_SLEEP_INTERVAL: 3     
      WAIT_AFTER_HOSTS: 2
    depends_on:
      - webapp

  watchdog:
    image: hulk66/timeline_be:0.82
    # build: backend
    restart: always
    environment:
      APP: "watchdog"
      WAIT_HOSTS: db:3306, rabbitmq:5672, webapp:5000 # redis:6379
      WAIT_HOSTS_TIMEOUT: 120
      WAIT_SLEEP_INTERVAL: 3     
      WAIT_AFTER_HOSTS: 2
      DB_SUPER_USER_PW: ${DB_SUPER_USER_PW}
    volumes:
      - ${PHOTO_PATH}:/photos:ro
      - ${LOG_PATH}:/log
    depends_on:
      - webapp
